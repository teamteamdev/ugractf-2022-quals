SplineFontDB: 3.2
FontName: MonplesirPermuted
FullName: Monplesir Permuted
FamilyName: Monplesir
Weight: Regular
Copyright: Copyright (c) Gophmann A.L., 2008. All rights reserved.
Version: 1.337 2022 CTF Edition
ItalicAngle: 0
UnderlinePosition: -100
UnderlineWidth: 50
Ascent: 800
Descent: 200
InvalidEm: 0
sfntRevision: 0x00010000
LayerCount: 2
Layer: 0 1 "Back" 1
Layer: 1 1 "Fore" 0
XUID: [1021 782 -1792549096 16046387]
StyleMap: 0x0040
FSType: 0
OS2Version: 2
OS2_WeightWidthSlopeOnly: 0
OS2_UseTypoMetrics: 0
CreationTime: 1201795220
ModificationTime: 1645847124
PfmFamily: 17
TTFWeight: 400
TTFWidth: 5
LineGap: 30
VLineGap: 0
Panose: 2 0 5 3 0 0 0 2 0 4
OS2TypoAscent: 926
OS2TypoAOffset: 0
OS2TypoDescent: -500
OS2TypoDOffset: 0
OS2TypoLinegap: 30
OS2WinAscent: 1220
OS2WinAOffset: 0
OS2WinDescent: 624
OS2WinDOffset: 0
HheadAscent: 926
HheadAOffset: 0
HheadDescent: -500
HheadDOffset: 0
OS2SubXSize: 700
OS2SubYSize: 650
OS2SubXOff: 0
OS2SubYOff: 140
OS2SupXSize: 700
OS2SupYSize: 650
OS2SupXOff: 0
OS2SupYOff: 477
OS2StrikeYSize: 50
OS2StrikeYPos: 250
OS2CapHeight: 1220
OS2XHeight: 454
OS2Vendor: 'goph'
OS2CodePages: 00000005.00000000
OS2UnicodeRanges: 80000203.10000000.00000000.00000000
MarkAttachClasses: 1
DEI: 91125
TtTable: prep
PUSHW_1
 40
CALL
PUSHW_1
 30
CALL
PUSHW_1
 20
CALL
PUSHW_1
 10
CALL
PUSHW_1
 0
CALL
EndTTInstrs
TtTable: fpgm
PUSHW_1
 0
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 1
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 2
FDEF
PUSHW_1
 1
LOOPCALL
POP
ENDF
PUSHW_1
 3
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 4
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 5
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 6
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 7
FDEF
PUSHW_1
 6
LOOPCALL
ENDF
PUSHW_1
 8
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 128
ELSE
PUSHB_1
 64
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 9
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 10
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 11
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 12
FDEF
PUSHW_1
 11
LOOPCALL
POP
ENDF
PUSHW_1
 13
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 14
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 15
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 16
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 17
FDEF
PUSHW_1
 16
LOOPCALL
ENDF
PUSHW_1
 18
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 128
ELSE
PUSHB_1
 64
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 19
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 20
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 21
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 22
FDEF
PUSHW_1
 21
LOOPCALL
POP
ENDF
PUSHW_1
 23
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 24
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 25
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 26
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 27
FDEF
PUSHW_1
 26
LOOPCALL
ENDF
PUSHW_1
 28
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 128
ELSE
PUSHB_1
 64
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 29
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 30
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 31
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 32
FDEF
PUSHW_1
 31
LOOPCALL
POP
ENDF
PUSHW_1
 33
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 34
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 35
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 36
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 37
FDEF
PUSHW_1
 36
LOOPCALL
ENDF
PUSHW_1
 38
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 128
ELSE
PUSHB_1
 64
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 39
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 40
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 41
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 42
FDEF
PUSHW_1
 41
LOOPCALL
POP
ENDF
PUSHW_1
 43
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 44
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 45
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 46
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 47
FDEF
PUSHW_1
 46
LOOPCALL
ENDF
PUSHW_1
 48
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 128
ELSE
PUSHB_1
 64
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 49
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
EndTTInstrs
ShortTable: cvt  5
  20
  20
  20
  20
  20
EndShort
ShortTable: maxp 16
  1
  0
  267
  400
  8
  0
  0
  1
  0
  0
  50
  0
  512
  1770
  0
  0
EndShort
LangName: 1033 "" "" "Regular" "GophmannA.L.: Monplesir script: 2008" "" "Version 1.337 2022 CTF Edition" "" "Monplesir script is a trademark of Gophmann A.L.." "Gophmann A.L." "Gophmann A.L." "" "" "gophmann@mail.ru" "" "" "" "Monplesir Permuted" "Regular" "Monplesir Permuted"
GaspTable: 3 8 2 16 1 65535 3 0
Encoding: UnicodeBmp
UnicodeInterp: none
NameList: AGL For New Fonts
DisplaySize: -48
AntiAlias: 1
FitToEm: 0
WinInfo: 23 23 12
BeginPrivate: 0
EndPrivate
BeginChars: {{ max_char }} {{ chars|length + 1 }}

StartChar: .notdef
Encoding: 65536 -1 0
Width: 200
Flags: W
LayerCount: 2
EndChar
{% for idx, char in enumerate(chars, start=1) %}
StartChar: {{ char.name }}
Encoding: {{ char.position }} {{ char.code }} {{ idx }}
{{ char.data }}EndChar
{% endfor %}
EndChars
EndSplineFont